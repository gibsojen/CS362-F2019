        -:    0:Source:testme.c
        -:    0:Graph:testme.gcno
        -:    0:Data:testme.gcda
        -:    0:Runs:1
        -:    0:Programs:1
        -:    1:#include<stdio.h>
        -:    2:#include<string.h>
        -:    3:#include<stdlib.h>
        -:    4:#include<time.h>
        -:    5:
function inputChar called 1460 returned 100% blocks executed 100%
     1460:    6:char inputChar()
        -:    7:{
        -:    8:    char c;
        -:    9:    // from 32 to 126
     1460:   10:    int number = (rand() % (126 - 32)) + 32;
call    0 returned 100%
        -:   11:    //printf ("test: %d\n", test);
     1460:   12:    c = number;
        -:   13:    //printf("char:  %c\n", c);
     1460:   14:    return c;
        -:   15:}
        -:   16:
function inputString called 1460 returned 100% blocks executed 100%
     1460:   17:char *inputString()
        -:   18:{
        -:   19:
        -:   20:    // from 0 to 9
        -:   21:   static char str[6];
        -:   22:   int number[3];
     1460:   23:   number[0] = 101;  //e
     1460:   24:   number[1] = 114;  //r
     1460:   25:   number[2] = 115;  //s
     1460:   26:   number[3] = 116;  //t
        -:   27:
        -:   28:   int pos;
        -:   29:   int i;
        -:   30:
     8760:   31:   for (i = 0; i < 5; i++) {
branch  0 taken 83%
branch  1 taken 17% (fallthrough)
     7300:   32:      pos = rand() % 4;
call    0 returned 100%
     7300:   33:      str[i] = number[pos];
        -:   34:   }
     1460:   35:   str[5] = '\0';
        -:   36:   //printf("string:  %s\n\n", str);
     1460:   37:   return str;
        -:   38:
        -:   39:}
        -:   40:
function testme called 1 returned 0% blocks executed 100%
        1:   41:void testme()
        -:   42:{
        1:   43:  int tcCount = 0;
        -:   44:  char *s;
        -:   45:  char c;
        1:   46:  int state = 0;
        -:   47:  while (1)
        -:   48:  {
     1460:   49:    tcCount++;
     1460:   50:    c = inputChar();
call    0 returned 100%
     1460:   51:    s = inputString();
call    0 returned 100%
     1460:   52:    printf("Iteration %d: c = %c, s = %s, state = %d\n", tcCount, c, s, state);
call    0 returned 100%
        -:   53:
     1460:   54:    if (c == '[' && state == 0) state = 1;
branch  0 taken 1% (fallthrough)
branch  1 taken 99%
branch  2 taken 6% (fallthrough)
branch  3 taken 94%
     1460:   55:    if (c == '(' && state == 1) state = 2;
branch  0 taken 1% (fallthrough)
branch  1 taken 99%
branch  2 taken 6% (fallthrough)
branch  3 taken 94%
     1460:   56:    if (c == '{' && state == 2) state = 3;
branch  0 taken 1% (fallthrough)
branch  1 taken 99%
branch  2 taken 8% (fallthrough)
branch  3 taken 92%
     1460:   57:    if (c == ' '&& state == 3) state = 4;
branch  0 taken 1% (fallthrough)
branch  1 taken 99%
branch  2 taken 7% (fallthrough)
branch  3 taken 93%
     1460:   58:    if (c == 'a' && state == 4) state = 5;
branch  0 taken 1% (fallthrough)
branch  1 taken 99%
branch  2 taken 5% (fallthrough)
branch  3 taken 95%
     1460:   59:    if (c == 'x' && state == 5) state = 6;
branch  0 taken 1% (fallthrough)
branch  1 taken 99%
branch  2 taken 10% (fallthrough)
branch  3 taken 90%
     1460:   60:    if (c == '}' && state == 6) state = 7;
branch  0 taken 2% (fallthrough)
branch  1 taken 98%
branch  2 taken 4% (fallthrough)
branch  3 taken 96%
     1460:   61:    if (c == ')' && state == 7) state = 8;
branch  0 taken 2% (fallthrough)
branch  1 taken 98%
branch  2 taken 5% (fallthrough)
branch  3 taken 95%
     1460:   62:    if (c == ']' && state == 8) state = 9;
branch  0 taken 1% (fallthrough)
branch  1 taken 99%
branch  2 taken 6% (fallthrough)
branch  3 taken 94%
     1460:   63:    if (s[0] == 'r' && s[1] == 'e'
branch  0 taken 24% (fallthrough)
branch  1 taken 76%
branch  2 taken 26% (fallthrough)
branch  3 taken 74%
       93:   64:       && s[2] == 's' && s[3] == 'e'
branch  0 taken 31% (fallthrough)
branch  1 taken 69%
branch  2 taken 24% (fallthrough)
branch  3 taken 76%
        7:   65:       && s[4] == 't' && s[5] == '\0'
branch  0 taken 14% (fallthrough)
branch  1 taken 86%
branch  2 taken 100% (fallthrough)
branch  3 taken 0%
        1:   66:       && state == 9)
branch  0 taken 100% (fallthrough)
branch  1 taken 0%
        -:   67:    {
        1:   68:      printf("error ");
call    0 returned 100%
        1:   69:      exit(200);
call    0 returned 0%
        -:   70:    }
     1459:   71:  }
        -:   72:}
        -:   73:
        -:   74:
function main called 1 returned 0% blocks executed 80%
        1:   75:int main(int argc, char *argv[])
        -:   76:{
        1:   77:    srand(time(NULL));
call    0 returned 100%
call    1 returned 100%
        1:   78:    testme();
call    0 returned 0%
        -:   79:    //inputChar();
        -:   80:    //inputString();
    #####:   81:    return 0;
        -:   82:}
